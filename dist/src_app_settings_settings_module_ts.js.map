{"version":3,"file":"src_app_settings_settings_module_ts.js","mappings":"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","sources":["./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/settings/settings.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../core';\nimport { SettingsComponent } from './settings.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule {}\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { User, UserService } from '../core';\n\n@Component({\n  selector: 'app-settings-page',\n  templateUrl: './settings.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SettingsComponent implements OnInit {\n  user: User = {} as User;\n  settingsForm: FormGroup;\n  errors: Object = {};\n  isSubmitting = false;\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private fb: FormBuilder,\n    private cd: ChangeDetectorRef\n  ) {\n    // create form group using the form builder\n    this.settingsForm = this.fb.group({\n      image: '',\n      username: '',\n      bio: '',\n      email: '',\n      password: ''\n    });\n    // Optional: subscribe to changes on the form\n    // this.settingsForm.valueChanges.subscribe(values => this.updateUser(values));\n  }\n\n  ngOnInit() {\n    // Make a fresh copy of the current user's object to place in editable form fields\n    Object.assign(this.user, this.userService.getCurrentUser());\n    // Fill the form\n    this.settingsForm.patchValue(this.user);\n  }\n\n  logout() {\n    this.userService.purgeAuth();\n    this.router.navigateByUrl('/');\n  }\n\n  submitForm() {\n    this.isSubmitting = true;\n\n    // update the model\n    this.updateUser(this.settingsForm.value);\n\n    this.userService\n    .update(this.user)\n    .subscribe(\n      updatedUser => this.router.navigateByUrl('/profile/' + updatedUser.username),\n      err => {\n        this.errors = err;\n        this.isSubmitting = false;\n        this.cd.markForCheck();\n      }\n    );\n  }\n\n  updateUser(values: Object) {\n    Object.assign(this.user, values);\n  }\n\n}\n","<div class=\"settings-page\">\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\n\n        <h1 class=\"text-xs-center\">Your Settings</h1>\n\n        <app-list-errors [errors]=\"errors\"></app-list-errors>\n\n        <form [formGroup]=\"settingsForm\" (ngSubmit)=\"submitForm()\">\n          <fieldset [disabled]=\"isSubmitting\">\n\n            <fieldset class=\"form-group\">\n              <input class=\"form-control\"\n                type=\"text\"\n                placeholder=\"URL of profile picture\"\n                formControlName=\"image\" />\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <input class=\"form-control form-control-lg\"\n                type=\"text\"\n                placeholder=\"Username\"\n                formControlName=\"username\" />\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <textarea class=\"form-control form-control-lg\"\n                rows=\"8\"\n                placeholder=\"Short bio about you\"\n                formControlName=\"bio\">\n              </textarea>\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <input class=\"form-control form-control-lg\"\n                type=\"email\"\n                placeholder=\"Email\"\n                formControlName=\"email\" />\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <input class=\"form-control form-control-lg\"\n                type=\"password\"\n                placeholder=\"New Password\"\n                formControlName=\"password\" />\n            </fieldset>\n\n            <button class=\"btn btn-lg btn-primary pull-xs-right\"\n              type=\"submit\">\n              Update Settings\n            </button>\n\n          </fieldset>\n        </form>\n\n        <!-- Line break for logout button -->\n        <hr />\n\n        <button class=\"btn btn-outline-danger\"\n          (click)=\"logout()\">\n          Or click here to logout.\n        </button>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { SettingsComponent } from './settings.component';\nimport { SharedModule } from '../shared';\nimport { SettingsRoutingModule } from './settings-routing.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    SettingsRoutingModule\n  ],\n  declarations: [\n    SettingsComponent\n  ]\n})\nexport class SettingsModule {}\n"],"names":[],"sourceRoot":"webpack:///"}